// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           BigInt     @id @unique
  first_name   String?
  username     String     @default("")
  last_name    String     @default("")
  phone_number String?    @unique
  state        String     @default("START")
  is_master    Boolean    @default(false)
  Master       Master[]
  is_admin     Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Customer     Customer[]
}

model Master {
  id                  String   @id @default(uuid())
  user                User     @relation(fields: [userId], references: [id])
  userId              BigInt   @unique
  workshop_name       String   @default("Berilmagan")
  address             String   @default("Berilmagan")
  landmark            String   @default("Berilmagan")
  longitude           String
  latitude            String
  start_time          String?
  end_time            String?
  time_per_customer   String
  ratings_count       Int
  overall_rating      Float
  is_banned           Boolean  @default(false)
  is_verified         Boolean  @default(false)
  ban_expiration_time DateTime
  service             Service  @relation(fields: [serviceId], references: [id])
  serviceId           BigInt
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  Order               Order[]
}

model Service {
  id        BigInt   @id @default(autoincrement())
  name      String
  Master    Master[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id     String  @id @default(uuid())
  name   String?
  user   User    @relation(fields: [userId], references: [id])
  userId BigInt
  Order  Order[]
}

model Order {
  id         String    @id @default(uuid())
  date       DateTime?
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String
  master     Master    @relation(fields: [masterId], references: [id])
  masterId   String
  time       BigInt
  rating     Int
  status     Status
}

enum Status {
  PENDING
  SUCCESS
}
